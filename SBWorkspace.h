/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>
#import "BKSWorkspaceDelegate.h"
#import "SBAlertManagerDelegate.h"
#import "SBWorkspaceTransactionDelegate.h"

@class BKSWorkspace, SBAlertManager, NSTimer, SBWorkspaceTransaction, NSMutableArray, SBWorkspaceEventQueueLockAssertion;
@protocol OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface SBWorkspace : NSObject <BKSWorkspaceDelegate, SBAlertManagerDelegate, SBWorkspaceTransactionDelegate> {
	BKSWorkspace* _bksWorkspace;
	SBAlertManager* _alertManager;
	SBWorkspaceTransaction* _currentTransaction;
	SBWorkspaceEventQueueLockAssertion* _eventQueueLock;
	NSObject<OS_dispatch_source>* _transactionWatchdog;
	NSTimer* _relaunchTimer;
	NSMutableArray* _applicationsToRelaunch;
}
@property(readonly, assign, nonatomic) SBAlertManager* alertManager;
@property(readonly, assign, nonatomic) BKSWorkspace* bksWorkspace;
@property(retain, nonatomic) SBWorkspaceTransaction* currentTransaction;
-(void)transactionDidFinish:(id)transaction success:(BOOL)success;
-(void)alertManager:(id)manager didDeactivateAlert:(id)alert overAlerts:(id)alerts;
-(void)alertManager:(id)manager willDeactivateAlert:(id)alert overAlerts:(id)alerts;
-(void)alertManager:(id)manager didActivateAlert:(id)alert overAlerts:(id)alerts;
-(void)alertManager:(id)manager willActivateAlert:(id)alert overAlerts:(id)alerts;
-(void)workspace:(id)workspace applicationDebugStateChanged:(id)changed newState:(BOOL)state;
-(void)workspace:(id)workspace handleStatusBarReturnActionFromApplication:(id)application statusBarStyle:(id)style;
-(void)workspace:(id)workspace handleOpenURL:(id)url fromApplication:(id)application;
-(void)workspace:(id)workspace applicationSuspensionSettingsUpdated:(id)updated withSettings:(id)settings;
-(void)workspace:(id)workspace applicationSuspended:(id)suspended withSettings:(id)settings;
-(void)workspace:(id)workspace applicationExited:(id)exited withInfo:(id)info;
-(void)workspace:(id)workspace applicationDidFailToLaunch:(id)application;
-(void)workspace:(id)workspace applicationActivated:(id)activated;
-(void)workspace:(id)workspace applicationDidFinishLaunching:(id)application withInfo:(id)info;
-(void)workspace:(id)workspace applicationDidStartLaunching:(id)application;
-(void)workspaceDidResume:(id)workspace;
-(void)workspaceWillResume:(id)workspace;
-(void)workspaceDidSuspend:(id)workspace;
-(void)workspaceWillSuspend:(id)workspace;
-(void)workspace:(id)workspace applicationDidBecomeReceiver:(id)application fromApplication:(id)application3;
-(id)workspace:(id)workspace applicationWillBecomeReceiver:(id)application fromApplication:(id)application3;
-(void)updateInterruptedByCallSettingsFrom:(id)from to:(id)to;
-(BOOL)_applicationExited:(id)exited withInfo:(id)info;
-(BOOL)_handleSetupExited:(id)exited;
-(void)_invalidateRelaunchTimer;
-(void)_memoryPressureRelieved:(id)relieved;
-(void)_memoryPressureWarn:(id)warn;
-(void)_launchNextPendedAutoLaunchApp;
-(void)_scheduleRelaunchTimerIfNecessary;
-(void)_handleBuddyLaunchFinished;
-(id)_applicationForBundleIdentifier:(id)bundleIdentifier frontmost:(BOOL)frontmost;
-(void)_noteCurrentTransactionFailed:(const char*)failed;
-(id)debugDescription;
-(void)dealloc;
-(id)init;
@end

